#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
BinaryTreeNode<int> * solve(BinaryTreeNode<int> *root,int x,int &k){
    if(root==NULL)
        return NULL;
    if(root->data==x){
        return root;
    }
    BinaryTreeNode<int> * left = solve(root->left,x,k);
    BinaryTreeNode<int> * right = solve(root->right,x,k);
    if((left!=NULL && right==NULL)){
        k--;
        if(k<=0){
            k = INT_MAX;
            // answer lock
            return root;
        }
        return left;
    }
    if((left==NULL && right!=NULL)){
        k--;
        if(k<=0){
            k = INT_MAX;
            return root;
        }
        return right;
    }
    if(left==NULL && right==NULL){
        return NULL;
    }
    return NULL;
} 
int findKthAncestor(BinaryTreeNode<int> *root, int targetNodeVal, int k) {
    // Write your code here.
    BinaryTreeNode<int> *temp = NULL;
    temp = solve(root,targetNodeVal,k);
    if(temp==NULL || temp->data==targetNodeVal)
        return -1;
    else
    return temp->data;
}
